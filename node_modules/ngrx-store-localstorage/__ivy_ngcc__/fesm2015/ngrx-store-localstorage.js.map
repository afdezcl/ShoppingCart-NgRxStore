{"version":3,"file":"ngrx-store-localstorage.js","sources":["../../src/lib/index.ts","../../src/ngrx-store-localstorage.ts"],"names":[],"mappings":"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","sourcesContent":["import * as deepmerge from 'deepmerge';\n\nconst INIT_ACTION = '@ngrx/store/init';\nconst UPDATE_ACTION = '@ngrx/store/update-reducers';\nconst detectDate = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})/;\n\n// correctly parse dates from local storage\nexport const dateReviver = (_key: string, value: any) => {\n    if (typeof value === 'string' && detectDate.test(value)) {\n        return new Date(value);\n    }\n    return value;\n};\n\nconst dummyReviver = (_key: string, value: any) => value;\n\nconst checkIsBrowserEnv = () => {\n    return typeof window !== 'undefined';\n};\n\nconst validateStateKeys = (keys: Keys) => {\n    return (keys as any[]).map((key) => {\n        let attr = key;\n\n        if (typeof key === 'object') {\n            attr = Object.keys(key)[0];\n        }\n\n        if (typeof attr !== 'string') {\n            throw new TypeError(\n                `localStorageSync Unknown Parameter Type: ` + `Expected type of string, got ${typeof attr}`\n            );\n        }\n        return key;\n    });\n};\n\nexport const rehydrateApplicationState = (\n    keys: Keys,\n    storage: Storage,\n    storageKeySerializer: (key: string) => string,\n    restoreDates: boolean\n) => {\n    return (keys as any[]).reduce((acc, curr) => {\n        let key = curr;\n        let reviver = restoreDates ? dateReviver : dummyReviver;\n        let deserialize: (arg0: string) => any;\n        let decrypt: (arg0: string) => string;\n\n        if (typeof key === 'object') {\n            key = Object.keys(key)[0];\n            // use the custom reviver function\n            if (typeof curr[key] === 'function') {\n                reviver = curr[key];\n            } else {\n                // use custom reviver function if available\n                if (curr[key].reviver) {\n                    reviver = curr[key].reviver;\n                }\n                // use custom serialize function if available\n                if (curr[key].deserialize) {\n                    deserialize = curr[key].deserialize;\n                }\n            }\n\n            // Ensure that encrypt and decrypt functions are both present\n            if (curr[key].encrypt && curr[key].decrypt) {\n                if (typeof curr[key].encrypt === 'function' && typeof curr[key].decrypt === 'function') {\n                    decrypt = curr[key].decrypt;\n                } else {\n                    console.error(`Either encrypt or decrypt is not a function on '${curr[key]}' key object.`);\n                }\n            } else if (curr[key].encrypt || curr[key].decrypt) {\n                // Let know that one of the encryption functions is not provided\n                console.error(`Either encrypt or decrypt function is not present on '${curr[key]}' key object.`);\n            }\n        }\n        if (storage !== undefined) {\n            let stateSlice = storage.getItem(storageKeySerializer(key));\n            if (stateSlice) {\n                // Use provided decrypt function\n                if (decrypt) {\n                    stateSlice = decrypt(stateSlice);\n                }\n\n                const isObjectRegex = new RegExp('{|\\\\[');\n                let raw = stateSlice;\n\n                if (stateSlice === 'null' || isObjectRegex.test(stateSlice.charAt(0))) {\n                    raw = JSON.parse(stateSlice, reviver);\n                }\n\n                return Object.assign({}, acc, {\n                    [key]: deserialize ? deserialize(raw) : raw,\n                });\n            }\n        }\n        return acc;\n    }, {});\n};\n\n// Recursively traverse all properties of the existing slice as defined by the `filter` argument,\n// and output the new object with extraneous properties removed.\nfunction createStateSlice(existingSlice: any, filter: (string | number | KeyConfiguration | Options)[]) {\n    return filter.reduce(\n        (memo: { [x: string]: any; [x: number]: any }, attr: string | number | KeyConfiguration | Options) => {\n            if (typeof attr === 'string' || typeof attr === 'number') {\n                const value = existingSlice?.[attr];\n                if (value !== undefined) {\n                    memo[attr] = value;\n                }\n            } else {\n                for (const key in attr) {\n                    if (Object.prototype.hasOwnProperty.call(attr, key)) {\n                        const element = attr[key];\n                        memo[key] = createStateSlice(existingSlice[key], element);\n                    }\n                }\n            }\n            return memo;\n        },\n        {}\n    );\n}\n\nexport const syncStateUpdate = (\n    state: any,\n    keys: Keys,\n    storage: Storage,\n    storageKeySerializer: (key: string | number) => string,\n    removeOnUndefined: boolean,\n    syncCondition?: (state: any) => any\n) => {\n    if (syncCondition) {\n        try {\n            if (syncCondition(state) !== true) {\n                return;\n            }\n        } catch (e) {\n            // Treat TypeError as do not sync\n            if (e instanceof TypeError) {\n                return;\n            }\n            throw e;\n        }\n    }\n\n    keys.forEach((key: string | KeyConfiguration | Options | ((key: string, value: any) => any)): void => {\n        let stateSlice = state[key as string];\n        let replacer;\n        let space: string | number;\n        let encrypt;\n\n        if (typeof key === 'object') {\n            let name = Object.keys(key)[0];\n            stateSlice = state[name];\n\n            if (typeof stateSlice !== 'undefined' && key[name]) {\n                // use serialize function if specified.\n                if (key[name].serialize) {\n                    stateSlice = key[name].serialize(stateSlice);\n                } else {\n                    // if serialize function is not specified filter on fields if an array has been provided.\n                    let filter: KeyConfiguration[];\n                    if (key[name].reduce) {\n                        filter = key[name];\n                    } else if (key[name].filter) {\n                        filter = key[name].filter;\n                    }\n                    if (filter) {\n                        stateSlice = createStateSlice(stateSlice, filter);\n                    }\n\n                    // Check if encrypt and decrypt are present, also checked at this#rehydrateApplicationState()\n                    if (key[name].encrypt && key[name].decrypt) {\n                        if (typeof key[name].encrypt === 'function') {\n                            encrypt = key[name].encrypt;\n                        }\n                    } else if (key[name].encrypt || key[name].decrypt) {\n                        // If one of those is not present, then let know that one is missing\n                        console.error(\n                            `Either encrypt or decrypt function is not present on '${key[name]}' key object.`\n                        );\n                    }\n                }\n\n                /*\n          Replacer and space arguments to pass to JSON.stringify.\n          If these fields don't exist, undefined will be passed.\n        */\n                replacer = key[name].replacer;\n                space = key[name].space;\n            }\n\n            key = name;\n        }\n\n        if (typeof stateSlice !== 'undefined' && storage !== undefined) {\n            try {\n                if (encrypt) {\n                    // ensure that a string message is passed\n                    stateSlice = encrypt(\n                        typeof stateSlice === 'string' ? stateSlice : JSON.stringify(stateSlice, replacer, space)\n                    );\n                }\n                storage.setItem(\n                    storageKeySerializer(key as string),\n                    typeof stateSlice === 'string' ? stateSlice : JSON.stringify(stateSlice, replacer, space)\n                );\n            } catch (e) {\n                console.warn('Unable to save state to localStorage:', e);\n            }\n        } else if (typeof stateSlice === 'undefined' && removeOnUndefined) {\n            try {\n                storage.removeItem(storageKeySerializer(key as string));\n            } catch (e) {\n                console.warn(`Exception on removing/cleaning undefined '${key}' state`, e);\n            }\n        }\n    });\n};\n\n// Default merge strategy is a full deep merge.\nexport const defaultMergeReducer = (state: any, rehydratedState: any, action: any) => {\n    if ((action.type === INIT_ACTION || action.type === UPDATE_ACTION) && rehydratedState) {\n        const overwriteMerge = (destinationArray: any, sourceArray: any, options: any) => sourceArray;\n        const options: deepmerge.Options = {\n            arrayMerge: overwriteMerge,\n        };\n\n        state = deepmerge(state, rehydratedState, options);\n    }\n\n    return state;\n};\n\nexport const localStorageSync = (config: LocalStorageConfig) => (reducer: any) => {\n    if (\n        (config.storage === undefined && !config.checkStorageAvailability) ||\n        (config.checkStorageAvailability && checkIsBrowserEnv())\n    ) {\n        config.storage = localStorage || window.localStorage;\n    }\n\n    if (config.storageKeySerializer === undefined) {\n        config.storageKeySerializer = (key) => key;\n    }\n\n    if (config.restoreDates === undefined) {\n        config.restoreDates = true;\n    }\n\n    // Use default merge reducer.\n    let mergeReducer = config.mergeReducer;\n\n    if (mergeReducer === undefined || typeof mergeReducer !== 'function') {\n        mergeReducer = defaultMergeReducer;\n    }\n\n    const stateKeys = validateStateKeys(config.keys);\n    const rehydratedState = config.rehydrate\n        ? rehydrateApplicationState(stateKeys, config.storage, config.storageKeySerializer, config.restoreDates)\n        : undefined;\n\n    return function (state: any, action: any) {\n        let nextState: any;\n\n        // If state arrives undefined, we need to let it through the supplied reducer\n        // in order to get a complete state as defined by user\n        if (action.type === INIT_ACTION && !state) {\n            nextState = reducer(state, action);\n        } else {\n            nextState = { ...state };\n        }\n\n        // Merge the store state with the rehydrated state using\n        // either a user-defined reducer or the default.\n        nextState = mergeReducer(nextState, rehydratedState, action);\n\n        nextState = reducer(nextState, action);\n\n        if (action.type !== INIT_ACTION) {\n            syncStateUpdate(\n                nextState,\n                stateKeys,\n                config.storage,\n                config.storageKeySerializer,\n                config.removeOnUndefined,\n                config.syncCondition\n            );\n        }\n\n        return nextState;\n    };\n};\n\nexport interface LocalStorageConfig {\n    keys: Keys;\n    rehydrate?: boolean;\n    storage?: Storage;\n    removeOnUndefined?: boolean;\n    restoreDates?: boolean;\n    storageKeySerializer?: (key: string) => string;\n    syncCondition?: (state: any) => any;\n    checkStorageAvailability?: boolean;\n    mergeReducer?: (state: any, rehydratedState: any, action: any) => any;\n}\n\ninterface KeyConfiguration {\n    [key: string]: string[] | number[] | KeyConfiguration[] | Options | ((key: string, value: any) => any);\n}\n\ninterface Options {\n    serialize?: (state: any) => any;\n    deserialize?: (state: any) => any;\n    reviver?: (key: string, value: any) => any;\n    replacer?: ((key: string, value: any) => any) | string[];\n    encrypt?: (message: string) => string;\n    decrypt?: (message: string) => string;\n    filter?: string[];\n    space?: string | number;\n}\n\nexport type Keys = (KeyConfiguration | Options| string)[];\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}